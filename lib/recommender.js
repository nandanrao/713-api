'use strict';

// recommender
var _ = require('lodash');
var request = require('request-promise');
var auth = require('./auth');

var rec = {};

rec.getRange = function getRange(name, num) {
  var ans = {};
  ans['target_' + name] = num;
  // ans['min_' + name] = num*.7;
  // ans['max_' + name] = num*1.3;
  return ans;
};

rec.convert = function convert(conf) {
  var raw = Object.keys(conf).map(function (key) {
    return rec.getRange(key, conf[key]);
  }).reduce(function (a, b) {
    return _.merge(a, b);
  });
  // if (raw.max_popularity) {
  //   raw.max_popularity = Math.ceil(raw.max_popularity)
  //   raw.min_popularity = Math.ceil(raw.min_popularity)
  // }
  if (raw.target_popularity) {
    raw.target_popularity = Math.ceil(raw.target_popularity);
  }
  return raw;
};

rec.takeRandom = function takeRandom(items, num) {
  return _.take(_.sortBy(items, function () {
    return 0.5 - Math.random();
  }), num);
};

rec.formatList = function formatList(list, num) {
  return rec.takeRandom(list, num).join(',');
};

rec.getSongs = function getSongs(conf, artists) {
  var token;
  return auth.getToken().then(function (token) {
    var qs = _.merge(rec.convert(conf), { seed_artists: rec.formatList(artists, 5) });
    return auth.callSpotify({
      url: 'https://api.spotify.com/v1/recommendations',
      json: true,
      qs: qs
    }, token);
  }).catch(function (err) {
    return console.log(err);
  });
};

module.exports = rec;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZWNvbW1lbmRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxJQUFJLElBQUksUUFBUSxRQUFSLENBQVI7QUFDQSxJQUFJLFVBQVUsUUFBUSxpQkFBUixDQUFkO0FBQ0EsSUFBSSxPQUFPLFFBQVEsUUFBUixDQUFYOztBQUVBLElBQU0sTUFBTSxFQUFaOztBQUVBLElBQUksUUFBSixHQUFlLFNBQVMsUUFBVCxDQUFtQixJQUFuQixFQUF5QixHQUF6QixFQUE4QjtBQUMzQyxNQUFJLE1BQU0sRUFBVjtBQUNBLE1BQUksWUFBWSxJQUFoQixJQUF3QixHQUF4Qjs7O0FBR0EsU0FBTyxHQUFQO0FBQ0QsQ0FORDs7QUFRQSxJQUFJLE9BQUosR0FBYyxTQUFTLE9BQVQsQ0FBa0IsSUFBbEIsRUFBd0I7QUFDcEMsTUFBSSxNQUFNLE9BQU8sSUFBUCxDQUFZLElBQVosRUFDUCxHQURPLENBQ0g7QUFBQSxXQUFPLElBQUksUUFBSixDQUFhLEdBQWIsRUFBa0IsS0FBSyxHQUFMLENBQWxCLENBQVA7QUFBQSxHQURHLEVBRVAsTUFGTyxDQUVBLFVBQUMsQ0FBRCxFQUFHLENBQUg7QUFBQSxXQUFTLEVBQUUsS0FBRixDQUFRLENBQVIsRUFBVSxDQUFWLENBQVQ7QUFBQSxHQUZBLENBQVY7Ozs7O0FBT0EsTUFBSSxJQUFJLGlCQUFSLEVBQTJCO0FBQ3pCLFFBQUksaUJBQUosR0FBd0IsS0FBSyxJQUFMLENBQVUsSUFBSSxpQkFBZCxDQUF4QjtBQUNEO0FBQ0QsU0FBTyxHQUFQO0FBQ0QsQ0FaRDs7QUFjQSxJQUFJLFVBQUosR0FBaUIsU0FBUyxVQUFULENBQXFCLEtBQXJCLEVBQTRCLEdBQTVCLEVBQWlDO0FBQ2hELFNBQU8sRUFBRSxJQUFGLENBQU8sRUFBRSxNQUFGLENBQVMsS0FBVCxFQUFnQjtBQUFBLFdBQU0sTUFBTSxLQUFLLE1BQUwsRUFBWjtBQUFBLEdBQWhCLENBQVAsRUFBbUQsR0FBbkQsQ0FBUDtBQUNELENBRkQ7O0FBSUEsSUFBSSxVQUFKLEdBQWlCLFNBQVMsVUFBVCxDQUFxQixJQUFyQixFQUEyQixHQUEzQixFQUFnQztBQUMvQyxTQUFPLElBQUksVUFBSixDQUFlLElBQWYsRUFBcUIsR0FBckIsRUFBMEIsSUFBMUIsQ0FBK0IsR0FBL0IsQ0FBUDtBQUNELENBRkQ7O0FBSUEsSUFBSSxRQUFKLEdBQWUsU0FBUyxRQUFULENBQW1CLElBQW5CLEVBQXlCLE9BQXpCLEVBQWtDO0FBQy9DLE1BQUksS0FBSjtBQUNBLFNBQU8sS0FDSixRQURJLEdBRUosSUFGSSxDQUVDLGlCQUFTO0FBQ2IsUUFBSSxLQUFLLEVBQUUsS0FBRixDQUFRLElBQUksT0FBSixDQUFZLElBQVosQ0FBUixFQUEyQixFQUFFLGNBQWMsSUFBSSxVQUFKLENBQWUsT0FBZixFQUF3QixDQUF4QixDQUFoQixFQUEzQixDQUFUO0FBQ0EsV0FBTyxLQUFLLFdBQUwsQ0FBaUI7QUFDdEIsV0FBSyw0Q0FEaUI7QUFFdEIsWUFBTSxJQUZnQjtBQUd0QixVQUFJO0FBSGtCLEtBQWpCLEVBSUosS0FKSSxDQUFQO0FBS0QsR0FUSSxFQVVKLEtBVkksQ0FVRTtBQUFBLFdBQU8sUUFBUSxHQUFSLENBQVksR0FBWixDQUFQO0FBQUEsR0FWRixDQUFQO0FBV0QsQ0FiRDs7QUFlQSxPQUFPLE9BQVAsR0FBaUIsR0FBakIiLCJmaWxlIjoicmVjb21tZW5kZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZWNvbW1lbmRlclxudmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdC1wcm9taXNlJyk7XG52YXIgYXV0aCA9IHJlcXVpcmUoJy4vYXV0aCcpO1xuXG5jb25zdCByZWMgPSB7fTtcblxucmVjLmdldFJhbmdlID0gZnVuY3Rpb24gZ2V0UmFuZ2UgKG5hbWUsIG51bSkge1xuICB2YXIgYW5zID0ge307XG4gIGFuc1sndGFyZ2V0XycgKyBuYW1lXSA9IG51bTtcbiAgLy8gYW5zWydtaW5fJyArIG5hbWVdID0gbnVtKi43O1xuICAvLyBhbnNbJ21heF8nICsgbmFtZV0gPSBudW0qMS4zO1xuICByZXR1cm4gYW5zO1xufTtcblxucmVjLmNvbnZlcnQgPSBmdW5jdGlvbiBjb252ZXJ0IChjb25mKSB7XG4gIHZhciByYXcgPSBPYmplY3Qua2V5cyhjb25mKVxuICAgIC5tYXAoa2V5ID0+IHJlYy5nZXRSYW5nZShrZXksIGNvbmZba2V5XSkpXG4gICAgLnJlZHVjZSgoYSxiKSA9PiBfLm1lcmdlKGEsYikpO1xuICAvLyBpZiAocmF3Lm1heF9wb3B1bGFyaXR5KSB7XG4gIC8vICAgcmF3Lm1heF9wb3B1bGFyaXR5ID0gTWF0aC5jZWlsKHJhdy5tYXhfcG9wdWxhcml0eSlcbiAgLy8gICByYXcubWluX3BvcHVsYXJpdHkgPSBNYXRoLmNlaWwocmF3Lm1pbl9wb3B1bGFyaXR5KVxuICAvLyB9XG4gIGlmIChyYXcudGFyZ2V0X3BvcHVsYXJpdHkpIHtcbiAgICByYXcudGFyZ2V0X3BvcHVsYXJpdHkgPSBNYXRoLmNlaWwocmF3LnRhcmdldF9wb3B1bGFyaXR5KVxuICB9XG4gIHJldHVybiByYXc7XG59O1xuXG5yZWMudGFrZVJhbmRvbSA9IGZ1bmN0aW9uIHRha2VSYW5kb20gKGl0ZW1zLCBudW0pIHtcbiAgcmV0dXJuIF8udGFrZShfLnNvcnRCeShpdGVtcywgKCkgPT4gMC41IC0gTWF0aC5yYW5kb20oKSksIG51bSlcbn07XG5cbnJlYy5mb3JtYXRMaXN0ID0gZnVuY3Rpb24gZm9ybWF0TGlzdCAobGlzdCwgbnVtKSB7XG4gIHJldHVybiByZWMudGFrZVJhbmRvbShsaXN0LCBudW0pLmpvaW4oJywnKVxufVxuXG5yZWMuZ2V0U29uZ3MgPSBmdW5jdGlvbiBnZXRTb25ncyAoY29uZiwgYXJ0aXN0cykge1xuICB2YXIgdG9rZW47XG4gIHJldHVybiBhdXRoXG4gICAgLmdldFRva2VuKClcbiAgICAudGhlbih0b2tlbiA9PiB7XG4gICAgICB2YXIgcXMgPSBfLm1lcmdlKHJlYy5jb252ZXJ0KGNvbmYpLCB7IHNlZWRfYXJ0aXN0czogcmVjLmZvcm1hdExpc3QoYXJ0aXN0cywgNSkgfSk7XG4gICAgICByZXR1cm4gYXV0aC5jYWxsU3BvdGlmeSh7XG4gICAgICAgIHVybDogJ2h0dHBzOi8vYXBpLnNwb3RpZnkuY29tL3YxL3JlY29tbWVuZGF0aW9ucycsXG4gICAgICAgIGpzb246IHRydWUsXG4gICAgICAgIHFzOiBxc1xuICAgICAgfSwgdG9rZW4pXG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVjO1xuIl19